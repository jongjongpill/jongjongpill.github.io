<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://jongjongpill.github.io/author/JongPil/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://jongjongpill.github.io/" rel="alternate" type="text/html" />
  <updated>2022-05-19T17:30:39+09:00</updated>
  <id>https://jongjongpill.github.io/author/JongPil/feed.xml</id>

  
  
  

  
    <title type="html">공부해보는곳 | </title>
  

  
    <subtitle>끄적끄적..</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Flexbox</title>
      <link href="https://jongjongpill.github.io/Flexbox" rel="alternate" type="text/html" title="Flexbox" />
      <published>2022-05-18T00:00:00+09:00</published>
      <updated>2022-05-18T00:00:00+09:00</updated>
      <id>https://jongjongpill.github.io/Flexbox</id>
      <content type="html" xml:base="https://jongjongpill.github.io/Flexbox">&lt;h1 id=&quot;flexbox&quot;&gt;Flexbox&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/&quot; alt=&quot;flexbox-1&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>JongPil</name>
        
        
      </author>

      

      
        <category term="css" />
      

      
        <summary type="html">Flexbox</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">META DATA</title>
      <link href="https://jongjongpill.github.io/metadata" rel="alternate" type="text/html" title="META DATA" />
      <published>2022-05-18T00:00:00+09:00</published>
      <updated>2022-05-18T00:00:00+09:00</updated>
      <id>https://jongjongpill.github.io/metadata</id>
      <content type="html" xml:base="https://jongjongpill.github.io/metadata">&lt;h1 id=&quot;meta-data&quot;&gt;META DATA&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;우리는 HTML문서에서 “body”에 들어가는 내용은 우리가 보는 문서에 나타나는 것이며&lt;br /&gt;
그리고 “head”에 들어가는 내용은 우리 눈에는 보이지 않는 브라우저의 정보이다.&lt;br /&gt;&lt;br /&gt;
처음 html 문서를 시작할때 &lt;strong&gt;!&lt;/strong&gt; 를 입력하게 된다면&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이렇게 html문서의 기본틀을 볼 수 있다.
이때 “head”에 들어가는 &lt;strong&gt;meta&lt;/strong&gt; 혹은 &lt;strong&gt;title&lt;/strong&gt; 과 같은 눈에 보이지 않는 정보들을 “META DATA”라고 부른다.&lt;/p&gt;

&lt;p&gt;이 메타데이터를 쉽게 설명하자면 &lt;strong&gt;“데이터를 설명해주는 데이터”&lt;/strong&gt; 라고 이해하면 될 것 같다.&lt;br /&gt;
가령 우리가 책을 보면 저자, 출판사, 발행일과 같은 내용을 메타 데이터로 볼 수 있다.&lt;/p&gt;
&lt;h2 id=&quot;title&quot;&gt;title&lt;/h2&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이 title은 뜻 그대로 이 문서의 제목이다. 이 제목은 
&lt;img src=&quot;/assets/built/images/html-metadata-1.jpg&quot; alt=&quot;홈페이지 이름 캡쳐&quot; /&gt;
위의 “Daum, Naver, GitHub”와 같이 제목으로 표시된다.&lt;br /&gt;
이 title은 “head”태그 안에 딱 한번만 들어갈 수 있으며 문자열만 입력할 수 있다.&lt;br /&gt;
만약 페이지를 즐겨찾기나 북마크를 해도 title에 작성된 제목으로 저장된다.&lt;/p&gt;

&lt;h2 id=&quot;meta&quot;&gt;meta&lt;/h2&gt;
&lt;p&gt;meta태그는 빈요소로 내용을 가질 수 없음으로 속성에 정보를 나열해야한다.
meta태그 안에 들어갈 수 있는 속성들을 살펴보자&lt;br /&gt;
&lt;strong&gt;name&lt;/strong&gt; - name은 content라는 특성과 함께 짝을 이뤄 사용해야하며 name은 이름, content는 값을 담당한다. &lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/HTML/Element/meta/name&quot;&gt;👉표준메타데이터 이름&lt;/a&gt; 앞의 링크에는 표준으로 name에 들어갈수 있는 이름을 설명하여 주지만 모두 사용해야만 하는 것은 아니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;name = “&lt;strong&gt;veiwport&lt;/strong&gt;” : 모바일 뷰보트의 초기 사이즈에 대한 힌트&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;charset&lt;/strong&gt; - 페이지의 문자 인코딩을 선언해준다. 이 특성은 무조건 &lt;em&gt;ASCII표현&lt;/em&gt; 이어야하며 head의 첫번째 태그로 넣는것을 권장한다. ex) utf-8 : 한국어&lt;/p&gt;

&lt;h2 id=&quot;link&quot;&gt;link&lt;/h2&gt;
&lt;p&gt;href(경로) 속성과 rel(relationship{관계}) 속성과 함께쓰며 가장 많이 쓰이는 예시로&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href = &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/main.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel = &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;를 볼 수 있다. &lt;strong&gt;rel&lt;/strong&gt;에는 stylesheet 외에도 “icon” 등 다양한 값들이 있다.,&lt;br /&gt;
&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/HTML/Element/link&quot;&gt;👉더 많은 속성 알아보기&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;mime-타입&quot;&gt;MIME 타입&lt;/h2&gt;
&lt;p&gt;위에서 봤던 link에는 ‘rel’과 ‘href’ 말고도 &lt;strong&gt;type&lt;/strong&gt;이라는 속성이 존재한다.&lt;br /&gt;
html의 link는 href로 불러온 경로에서 파일을 불러오는것 뿐 그 파일에 대한 정보를 알수는 없는데 이때 그 파일에 대한 설명을 type 속성으로 설명해준다고 생각하면된다.&lt;br /&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/HTTP/Basics_of_HTTP/MIME_types&quot;&gt;👉 MIME TYPE 알아보기&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;style&quot;&gt;style&lt;/h2&gt;
&lt;p&gt;이전에 link에서 자주쓰는 예시로 css파일을 불러오는 예시를 들었는데 그렇게 하지 않고 html head태그 안에 style을 작성할 수 있다. 이렇게도 적용할 수 있다고만 알고있자.&lt;/p&gt;

&lt;h2 id=&quot;script&quot;&gt;script&lt;/h2&gt;
&lt;p&gt;이 태그를 사용하여 아래처럼 외부에서 자바스크립트 파일을 불러올수있다.&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;main.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;style 태그와 마찬가지로 html파일 내에서도 스크립트를 작성할 수 있는데 이것도 알고만 있자. &lt;br /&gt;
또한 이 태그는 꼭 head태그 안에만 있어야 하는것은 아니다.
보통 이 태그는 body의 마지막에 넣어주는데 그 이유는 html과 css가 모두 업로드 된 뒤에 스크립트를 적용시키기 위함이다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>JongPil</name>
        
        
      </author>

      

      
        <category term="html" />
      

      
        <summary type="html">META DATA 우리는 HTML문서에서 “body”에 들어가는 내용은 우리가 보는 문서에 나타나는 것이며 그리고 “head”에 들어가는 내용은 우리 눈에는 보이지 않는 브라우저의 정보이다. 처음 html 문서를 시작할때 ! 를 입력하게 된다면 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&quot;en&quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt; &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&amp;gt; &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 이렇게 html문서의 기본틀을 볼 수 있다. 이때 “head”에 들어가는 meta 혹은 title 과 같은 눈에 보이지 않는 정보들을 “META DATA”라고 부른다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">String(2)</title>
      <link href="https://jongjongpill.github.io/String(2)" rel="alternate" type="text/html" title="String(2)" />
      <published>2022-05-17T00:00:00+09:00</published>
      <updated>2022-05-17T00:00:00+09:00</updated>
      <id>https://jongjongpill.github.io/String(2)</id>
      <content type="html" xml:base="https://jongjongpill.github.io/String(2)">&lt;h2 id=&quot;substring&quot;&gt;.substring()&lt;/h2&gt;
&lt;p&gt;이 메서드는 2개의 인수를 전달받는데 첫번째 인수로 전달받은 인덱스에 위치하는 문자부터 두번째 인덱스에 위치하는 문자의 바로 전까지의 부분 문자열을 반환한다.&lt;/p&gt;

&lt;p&gt;두번째 인수는 생략할 수 있으며 생략하게 될경우 첫번째 인수부터 마지막 문자까지 반환할 수 있다.&lt;/p&gt;

&lt;p&gt;이 메서드는 두번째 메서드가 첫번째보다 커야 정상이지만 만약 첫번째 인수가 더 크다면 두 인수는 교환된다.&lt;/p&gt;

&lt;p&gt;인수가 0 또는 NaN이라면 0으로 취급된다.
또한 인수가 문자열의 길이보다 크다면 문자열의 길이로 취급된다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; ell&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 인수를 하나만 받았을 때&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; ello World&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 두번째 인수가 더 클 때&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; ell&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 인수가 0보다 작을 때&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; Hello World&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 문자열의 길이보다 클 때&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; ello World&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;slice&quot;&gt;.slice()&lt;/h2&gt;
&lt;p&gt;이 메서드는 substring과 동일하게 동작하는데&lt;br /&gt;한가지 다른점은 &lt;strong&gt;음수인 인수를 전달할수 있다는 것&lt;/strong&gt;이다. 만약 음수를 인수로 전달하게 된다면 가장 뒤에서부터 인수만큼의 문자열을 잘라내어 반환한다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; World &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;touppercase-tolowercase&quot;&gt;.toUpperCase() .toLowerCase()&lt;/h2&gt;
&lt;p&gt;Upper은 대상을 모두 &lt;strong&gt;대문자&lt;/strong&gt;로&lt;br /&gt;
Lower은 대상을 모두 &lt;strong&gt;소문자&lt;/strong&gt;로 변경해준다.&lt;/p&gt;

&lt;h2 id=&quot;trim&quot;&gt;.trim()&lt;/h2&gt;
&lt;p&gt;대상의 문자열의 공백을 모두 제거하여 반환해준다.&lt;/p&gt;

&lt;p&gt;또한 &lt;strong&gt;.trimStart()&lt;/strong&gt; 와 &lt;strong&gt;.trimEnd()&lt;/strong&gt; 라는 메서드도 존재하는데 왠지 알것같은 그런느낌 그대로이다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;   what   &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &apos;what&apos;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trimStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &apos;what   &apos;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trimEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &apos;   what&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;repeat&quot;&gt;.repeat()&lt;/h2&gt;
&lt;p&gt;ES6에서 도입된 메서드로 인수로 전달받은 정수만큼 대상 문자열을 반복해 새로운 문자열로 반환한다.&lt;br /&gt;
만약 인수로 0을 받는다면 빈 문자열을 반환한다. 또한 인수를 생략하면 인수는 0으로 설정된다.&lt;br /&gt;
인수가 소수점이라면 내림으로 적용된다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &apos;&apos;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &apos;&apos;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &apos;abc&apos;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &apos;abcabc&apos;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &apos;abcabc&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;replace&quot;&gt;.replace()&lt;/h2&gt;
&lt;p&gt;첫번째 인수로 전달받은 문자열 또는 정규표현식을 검색하여 두번째 인수로 전달한 문자열로 치환한 문자열을 반환한다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;jong&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &apos;Hello jong&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;split&quot;&gt;.split()&lt;/h2&gt;
&lt;p&gt;인수로 전달받은 문자열 또는 정규표현식을 검색하여 문자열을 구분(나눈) 후 분리된 문자열로 이루어진 배열을 반환해준다. &lt;br /&gt;&lt;em&gt;인수를 두개를 가질 수 있다 만약 2개를 갖는다면 두번째 인수는 배열의 길이를 지정해준다.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;My name is jongpill&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; [&quot;My&quot;, &quot;name&quot;, &quot;is&quot;, &quot;jongpill&quot;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; [&quot;M&quot; ~~~..~.. &quot;l&quot;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; [&quot;My name is jongpill&quot;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; [&quot;My&quot;, &quot;name&quot;, &quot;is&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이 메서드는 배열을 반환해주기때문에 배열의 베서드와 함께 사용해도 문제없다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>JongPil</name>
        
        
      </author>

      

      
        <category term="javascript" />
      

      
        <summary type="html">.substring() 이 메서드는 2개의 인수를 전달받는데 첫번째 인수로 전달받은 인덱스에 위치하는 문자부터 두번째 인덱스에 위치하는 문자의 바로 전까지의 부분 문자열을 반환한다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">String(1)</title>
      <link href="https://jongjongpill.github.io/String(1)" rel="alternate" type="text/html" title="String(1)" />
      <published>2022-05-17T00:00:00+09:00</published>
      <updated>2022-05-17T00:00:00+09:00</updated>
      <id>https://jongjongpill.github.io/String(1)</id>
      <content type="html" xml:base="https://jongjongpill.github.io/String(1)">&lt;h1 id=&quot;string&quot;&gt;STRING&lt;/h1&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;length-프로퍼티&quot;&gt;length 프로퍼티&lt;/h2&gt;
&lt;p&gt;length 프로퍼티는 문자열의 문자 개수를 반환한다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위처럼 배열과 마찬가지로 length 프로퍼티를 갖고 인덱스를 나타내는 숫자를 프로퍼티 키로 가지며 각 문자를 프로퍼티 값으로 가지므로 String객체는 &lt;strong&gt;유사배열 객체&lt;/strong&gt;다.&lt;/p&gt;
&lt;h2 id=&quot;indexof&quot;&gt;.indexOf()&lt;/h2&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&apos;l&apos;을 검색하여 첫번째 인덱스를 반환&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;만약 검색에 실패한다면 -1을 반환한다.&lt;br /&gt;
또한 2번째 인수로 검색을 시작할 인덱스를 전달할 수 있다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; 3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//3번째 인덱스부터 &apos;l&apos;를 검색한다&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;보통 indexOf()는 대상 문자열에 특정 문자열이 존재하는지 확인할때 유용한데 아래처럼 사용할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//대상 문자열에 world가 있다면 실행&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위의 방법도 유용하지만 ES6에서 도입된 곧 알아볼 includes 메서드가 가독성이 더 좋다고 한다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//대상 문자열에 world가 있다면 실행&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;search&quot;&gt;.search()&lt;/h2&gt;
&lt;p&gt;대상 문자열에서 인수로 전달받은 &lt;strong&gt;정규 표현식&lt;/strong&gt;과 매치하는 문자열을 검색하여 일치하는 인덱스를 반환하며 indexOf와 마찬가지로 검색되지 않으면 -1를 반환한다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/o/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;inculdes&quot;&gt;.inculdes()&lt;/h2&gt;
&lt;p&gt;앞서 말했듯 ES6에서 도입된 메서드이며 &lt;strong&gt;결과를 true 혹은 false로 반환&lt;/strong&gt;한다.
indexOf와 마찬가지로 2번째 인수로 검색을 시작할 인덱스를 전달할 수도있다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;startswith&quot;&gt;.startsWith()&lt;/h2&gt;
&lt;p&gt;이 메서드도 ES6에서 도입됐는데 대상 문자열이 인수로 전달받은 문자열로 시작하는지 확인하여 그 결과를 true 혹은 false로 반환한다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;He&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;he&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; false - 대소문자도 구분한다는것을 알수있다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;indexOf, includes와 마찬가지로 2번째 인수로 검색을 시작할 인덱스를 전달할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;endswith&quot;&gt;.endsWith()&lt;/h2&gt;
&lt;p&gt;startsWith()와 같은 메서드로 인수로 전달받은 문자열로 끝나는지 확인할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;charat&quot;&gt;.charAt()&lt;/h2&gt;
&lt;p&gt;인수로 인덱스를 받아 그 인덱스에 위치한 문자를 검색하여 반환해준다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &apos;e&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;인수의 범위는 문자열의 범위로 만약 그 범위를 벗어난 경우 &lt;strong&gt;빈 문자열(‘’)&lt;/strong&gt; 을 반환한다. &lt;br /&gt;비슷한 메서드로 .charCodeAt() 과 .codePointAt()이 있다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>JongPil</name>
        
        
      </author>

      

      
        <category term="javascript" />
      

      
        <summary type="html">STRING</summary>
      

      
      
    </entry>
  
</feed>
